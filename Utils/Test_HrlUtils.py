from HrlUtils import *

g = Graph()

n1 = Node("state 1", value=0.0)
g.add_node(n1)
n2 = Node("state 2", value=0.0)
g.add_node(n2)
n3 = Node("state 3", value=0.0)
g.add_node(n3)
n4 = Node("state 4", value=0.0)
g.add_node(n4)
n5 = Node("state 5", value=+0.0)
g.add_node(n5)
n6 = Node("state 6", value=0.0)
g.add_node(n6)
nDied1 = Node("Died 1", value=-1.0)
g.add_node(nDied1)
nDied2 = Node("Died 2", value=-1.0)
g.add_node(nDied2)
nDied3 = Node("Died 3", value=-1.0)
g.add_node(nDied3)
nDied4 = Node("Died 4", value=-1.0)
g.add_node(nDied4)
nDied5 = Node("Died 5", value=-1.0)
g.add_node(nDied5)
nDied6 = Node("Died 6", value=-1.0)
g.add_node(nDied6)
nDied7 = Node("Died 7", value=-1.0)
g.add_node(nDied7)
nGoal = Node("Goal", value=1.0)
g.add_node(nGoal)
n11 = Node("state 11", value=0.0)
g.add_node(n11)
n12 = Node("state 12", value=0.0)
g.add_node(n12)
n13 = Node("state 13", value=0.0)
g.add_node(n13)
nDied11 = Node("Died 11", value=-1.0)
g.add_node(nDied11)
nDied12 = Node("Died 12", value=-1.0)
g.add_node(nDied12)
nDied13 = Node("Died 13", value=-1.0)
g.add_node(nDied13)
nGoal2 = Node("Goal2", value=1.0)
g.add_node(nGoal2)

# Died
e1 = Edge(n1, nDied1)
g.add_edge(e1)
e2 = Edge(n2, nDied2)
g.add_edge(e2)
e3 = Edge(n3, nDied3)
g.add_edge(e3)
e4 = Edge(n4, nDied4)
g.add_edge(e4)
e5 = Edge(n5, nDied5)
g.add_edge(e5)
e6 = Edge(n6, nDied6)
g.add_edge(e6)


e9 = Edge(n1, n2)
g.add_edge(e9)
e10 = Edge(n2, n1)
g.add_edge(e10)

e11 = Edge(n1, n3)
g.add_edge(e11)
e12 = Edge(n3, n1)
g.add_edge(e12)

e13 = Edge(n2, n4)
g.add_edge(e13)
e14 = Edge(n4, n2)
g.add_edge(e14)

e15 = Edge(n3, n4)
g.add_edge(e15)
e16 = Edge(n4, n3)
g.add_edge(e16)

e17 = Edge(n4, n5)
g.add_edge(e17)
e18 = Edge(n5, n4)
g.add_edge(e18)

e19 = Edge(n4, n6)
g.add_edge(e19)
e20 = Edge(n6, n4)
g.add_edge(e20)

e21 = Edge(n6, nGoal)
g.add_edge(e21)

e22 = Edge(nGoal, nDied7)
g.add_edge(e22)
e23 = Edge(nGoal, n11)
g.add_edge(e23)

e24 = Edge(n11, n12)
g.add_edge(e24)
e25 = Edge(n12, n11)
g.add_edge(e25)

e26 = Edge(n12, n13)
g.add_edge(e26)
e27 = Edge(n13, n12)
g.add_edge(e27)

e28 = Edge(n13, nGoal2)
g.add_edge(e28)

e29 = Edge(n11, nDied11)
g.add_edge(e29)
e30 = Edge(n12, nDied12)
g.add_edge(e30)
e31 = Edge(n13, nDied13)
g.add_edge(e31)




distances = g.find_distances( n1 )
g.print_best_path( n1, distances )
indexes = g.get_node_best_edge_index( n1, distances, False, True)
print(indexes)
distances = g.find_distances( n2 )
g.print_best_path( n2, distances )
distances = g.find_distances( n3 )
g.print_best_path( n3, distances )
distances = g.find_distances( n4 )
g.print_best_path( n4, distances )
distances = g.find_distances( n5 )
g.print_best_path( n5, distances )
distances = g.find_distances( n6 )
g.print_best_path( n6, distances )
distances = g.find_distances( nGoal )
g.print_best_path( nGoal, distances )
distances = g.find_distances( n11 )
g.print_best_path( n11, distances )
distances = g.find_distances( n12 )
g.print_best_path( n12, distances )
distances = g.find_distances( n13 )
g.print_best_path( n13, distances )

# n1 = Node("state 1", value=0.0)
# g.add_node(n1)
# n2 = Node("state 2", value=0.0)
# g.add_node(n2)
# n3 = Node("state 3", value=0.0)
# g.add_node(n3)
# n4 = Node("state 4", value=0.0)
# g.add_node(n4)
# nGoal = Node("Goal", value=+1.0)
# g.add_node(nGoal)
# nDied = Node("Died", value=-1.0)
# g.add_node(nDied)
#
# # Died
# e1 = Edge(n1, nDied)
# g.add_edge(e1)
# e2 = Edge(n2, nDied)
# g.add_edge(e2)
# e3 = Edge(n3, nDied)
# g.add_edge(e3)
# e4 = Edge(n4, nDied)
# g.add_edge(e4)
#
#
# e9 = Edge(n1, n2)
# g.add_edge(e9)
# e10 = Edge(n2, n1)
# g.add_edge(e10)
#
# e11 = Edge(n2, n3)
# g.add_edge(e11)
# e12 = Edge(n3, n2)
# g.add_edge(e12)
#
# e13 = Edge(n3, n4)
# g.add_edge(e13)
# e14 = Edge(n4, n3)
# g.add_edge(e14)
#
# e15 = Edge(n3, n4)
# g.add_edge(e15)
# e16 = Edge(n4, n3)
# g.add_edge(e16)
#
# e19 = Edge(n4, nGoal)
# g.add_edge(e19)
#
# distances = g.find_distances( n2 )

